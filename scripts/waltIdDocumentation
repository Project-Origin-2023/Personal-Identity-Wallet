avviare i container docker con il comando
docker compose up -d oppure avviandolo dalla interfaccia grafica Docker Desktop


Generazione di un nuovo template PID

curl --location --request POST 'http://localhost:19011/v1/templates/PID' \
--header 'accept: text/plain' \
--header 'Content-Type: application/json' \
--data-raw '{
   "type":["PID"],
   "@context":[
      "https://www.w3.org/2018/credentials/v1"
   ],
   "credentialSchema":{
      "id":"https://raw.githubusercontent.com/walt-id/waltid-ssikit-vclib/master/src/test/resources/schemas/VerifiableId.json",
      "type":"FullJsonSchemaValidator2021"
   },
   "credentialStatus":{
        "id":"",
        "type":""
    },
    "credentialSubject":{
      "currentAddress":[],
      "dateOfBirth":"",
      "familyName":"",
      "firstName":"",
      "gender":"",
      "id":"",
      "identifier":[],
      "nameAndFamilyNameAtBirth":"",
      "personalIdentifier":"",
      "placeOfBirth":""
   },
   "evidence":[
      {
         "documentPresence":[],
         "evidenceDocument":[],
         "id":"",
         "subjectPresence":[],
         "type":[],
         "verifier":""
      }
   ],
   "id":"",
   "issuanceDate":"",
   "issued":"",
   "issuer":"",
   "validFrom":""
}'



Generazione di un nuovo template EAA

curl --location --request POST 'http://localhost:19011/v1/templates/EAA' \
--header 'accept: text/plain' \
--header 'Content-Type: application/json' \
--data-raw '{
   "type":[
      "EAA"
   ],
   "@context":[
      "https://www.w3.org/2018/credentials/v1"
   ],
   "id":"",
   "issuer":"",
   "issuanceDate":"",
   "issued":"",
   "validFrom":"",
   "expirationDate":"",
   "credentialSchema":{
      "id":"https://raw.githubusercontent.com/walt-id/waltid-ssikit-vclib/master/src/test/resources/schemas/VerifiableAttestation.json",
      "type":"JsonSchemaValidator2018"
   },
   "credentialSubject":{
      "id":""
   },
   "evidence":[
      {
         "documentPresence":"",
         "evidenceDocument":"",
         "id":"",
         "subjectPresence":"",
         "type":[
            "DocumentVerification"
         ],
         "verifier":""
      }
   ]
}'





Generazione  DID per issuerApp con metodo web (non funzionante)

curl --location --request POST 'http://localhost:19021/did/create' \
--header 'accept: application/json' \
--header 'Content-Type: application/json' \
--data-raw '
{
    "method": "web",
    "didWebDomain": "andreibobirica.ml",
    "didWebPath": "https://andreibobirica.ml"
}'

Non viene creato un DID con il giusto webDomain, viene usato quello standard, e successivamente non potendo usarne un’altro da questo errore:
{"details" : [], "status" : 500, "title" : "[SQLITE_CONSTRAINT_UNIQUE] A UNIQUE constraint failed (UNIQUE constraint failed: lt_key_alias.alias)", "type" : null}

Generazione DID per issuerApp con metodo key
curl --location --request POST 'http://localhost:19021/did/create' \
--header 'accept: application/json' \
--header 'Content-Type: application/json' \
--data-raw '
{
    "method": "key"
}'

Nel response sarà consegnato URI contenente i riferimenti alla DID

Generazione DID per Holder con metodo key 
curl --location --request POST 'http://localhost:19022/did/create' \
--header 'accept: application/json' \
--header 'Content-Type: application/json' \
--data-raw '
{
    "method": "key"
}'

Nel response sarà consegnato URI contenente i riferimenti alla DID



Generazione Credenziale PID
curl --location --request POST 'http://localhost:19011/v1/credentials/issue' \
--header 'accept: application/json' \
--header 'Content-Type: application/json' \
--data-raw '{
    "templateId": "PID",
    "config":
    {
        "subjectDid": "did:key:z6MkuHi68Avi8b36bhsHukLTd3J22QtXQcQf5mXU4znYhcWk",
        "issuerDid": "did:key:z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K"
    },
    "credentialData":
    {
        "credentialSubject":
        {
            "id": "urn:uuid:394870f4-e583-4922-b2fb-25e3ac04341d",
            "currentAddress":["Via Ardoneghe Brugine"],
            "dateOfBirth":"1999-12-29",
            "familyName":"Bob",
            "firstName":"Luca",
            "gender":"MALE",
            "nameAndFamilyNameAtBirth":"Luca Bob",
            "personalIdentifier":"BBRNRC88T29Z127S",
            "placeOfBirth":"Italia"
        },
        "evidence":{
            "documentPresence": ["Phisical"],
            "evidenceDocument": ["Passport"],
            "id": "123",
            "subjectPresence": ["Phisical"],
            "type": [],
            "verifier": "did:key:z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K"
        }
    }
}'


Nel campo config inserire rispettivamente il DID del wallet e del issuer
I dati di risposta da questa richiesta saranno criptati in formato JWT, si devono decodificare per leggerne il contenuto
Risposta:

eyJraWQiOiJkaWQ6a2V5Ono2TWtqMVNhbXdUV1BFd1FGd2hUcVhwODJ5M052eTFESG1pU2dQdUFOQVZtMnd6QyN6Nk1rajFTYW13VFdQRXdRRndoVHFYcDgyeTNOdnkxREhtaVNnUHVBTkFWbTJ3ekMiLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJpc3MiOiJkaWQ6a2V5Ono2TWtqMVNhbXdUV1BFd1FGd2hUcVhwODJ5M052eTFESG1pU2dQdUFOQVZtMnd6QyIsInN1YiI6ImRpZDprZXk6ejZNa21FcW5FUnlCeXM2ZVRqSHVhYzh2RG1YUVRadzlhRTRTZTZQMTRDdXdDTjc1IiwibmJmIjoxNjg4MDQwNTkzLCJpYXQiOjE2ODgwNDA1OTMsInZjIjp7InR5cGUiOlsiVmVyaWZpYWJsZUlkIl0sIkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIl0sImlkIjoidXJuOnV1aWQ6M2NjYTYyMTktMjFlNS00M2I1LTgxMTMtOWYzODc3Mjg4NTZmIiwiaXNzdWVyIjoiZGlkOmtleTp6Nk1rajFTYW13VFdQRXdRRndoVHFYcDgyeTNOdnkxREhtaVNnUHVBTkFWbTJ3ekMiLCJpc3N1YW5jZURhdGUiOiIyMDIzLTA2LTI5VDEyOjA5OjUzWiIsImlzc3VlZCI6IjIwMjMtMDYtMjlUMTI6MDk6NTNaIiwidmFsaWRGcm9tIjoiMjAyMy0wNi0yOVQxMjowOTo1M1oiLCJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dhbHQtaWQvd2FsdGlkLXNzaWtpdC12Y2xpYi9tYXN0ZXIvc3JjL3Rlc3QvcmVzb3VyY2VzL3NjaGVtYXMvVmVyaWZpYWJsZUlkLmpzb24iLCJ0eXBlIjoiRnVsbEpzb25TY2hlbWFWYWxpZGF0b3IyMDIxIn0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImlkIjoiZGlkOmtleTp6Nk1rbUVxbkVSeUJ5czZlVGpIdWFjOHZEbVhRVFp3OWFFNFNlNlAxNEN1d0NONzUiLCJjdXJyZW50QWRkcmVzcyI6WyJiUlVHSU5FIl0sImRhdGVPZkJpcnRoIjoiMjAyMi0xMC0wNlQxODowOToxNC41NzBaIiwiZmFtaWx5TmFtZSI6ImJzT0JJUklDQSIsImZpcnN0TmFtZSI6ImFORFJFSSIsImdlbmRlciI6Ik1BTEUiLCJuYW1lQW5kRmFtaWx5TmFtZUF0QmlydGgiOiJBbmRyZWkgQm9iaXJpY2EiLCJwZXJzb25hbElkZW50aWZpZXIiOiJCQlJOUkM4OFQyOVoxMjciLCJwbGFjZU9mQmlydGgiOiJSb21hbmlhIn0sImV2aWRlbmNlIjpbeyJkb2N1bWVudFByZXNlbmNlIjpbXSwiZXZpZGVuY2VEb2N1bWVudCI6W10sInN1YmplY3RQcmVzZW5jZSI6W10sInR5cGUiOltdLCJ2ZXJpZmllciI6ImRpZDprZXk6eHh4In1dfSwianRpIjoidXJuOnV1aWQ6M2NjYTYyMTktMjFlNS00M2I1LTgxMTMtOWYzODc3Mjg4NTZmIn0.xtrfqNK3aqIyt6MShAYkupGRxQs7tFQFMpQH5GgPt7y-6QO9Rn-u06W8G5w0YyLpS2KhVve61q2nXRuhSCieAg


Decodificato :

HEADER:ALGORITHM & TOKEN TYPE
{
 "kid": "did:key:z6Mkj1SamwTWPEwQFwhTqXp82y3Nvy1DHmiSgPuANAVm2wzC#z6Mkj1SamwTWPEwQFwhTqXp82y3Nvy1DHmiSgPuANAVm2wzC",
 "typ": "JWT",
 "alg": "EdDSA"
}
PAYLOAD:DATA
{
 "iss": "did:key:z6Mkj1SamwTWPEwQFwhTqXp82y3Nvy1DHmiSgPuANAVm2wzC",
 "sub": "did:key:z6MkmEqnERyBys6eTjHuac8vDmXQTZw9aE4Se6P14CuwCN75",
 "nbf": 1688040593,
 "iat": 1688040593,
 "vc": {
   "type": [
     "VerifiableId"
   ],
   "@context": [
     "https://www.w3.org/2018/credentials/v1"
   ],
   "id": "urn:uuid:3cca6219-21e5-43b5-8113-9f387728856f",
   "issuer": "did:key:z6Mkj1SamwTWPEwQFwhTqXp82y3Nvy1DHmiSgPuANAVm2wzC",
   "issuanceDate": "2023-06-29T12:09:53Z",
   "issued": "2023-06-29T12:09:53Z",
   "validFrom": "2023-06-29T12:09:53Z",
   "credentialSchema": {
     "id": "https://raw.githubusercontent.com/walt-id/waltid-ssikit-vclib/master/src/test/resources/schemas/VerifiableId.json",
     "type": "FullJsonSchemaValidator2021"
   },
   "credentialSubject": {
     "id": "did:key:z6MkmEqnERyBys6eTjHuac8vDmXQTZw9aE4Se6P14CuwCN75",
     "currentAddress": [
       "bRUGINE"
     ],
     "dateOfBirth": "2022-10-06T18:09:14.570Z",
     "familyName": "bsOBIRICA",
     "firstName": "aNDREI",
     "gender": "MALE",
     "nameAndFamilyNameAtBirth": "Andrei Bobirica",
     "personalIdentifier": "BBRNRC88T29Z127",
     "placeOfBirth": "Romania"
   },
   "evidence": [
     {
       "documentPresence": [],
       "evidenceDocument": [],
       "subjectPresence": [],
       "type": [],
       "verifier": "did:key:xxx"
     }
   ]
 },
 "jti": "urn:uuid:3cca6219-21e5-43b5-8113-9f387728856f"
}
VERIFY SIGNATURE
HMACSHA256(
  base64UrlEncode(header) + "." +
  base64UrlEncode(payload),
  
) secret base64 encoded

Generazione credenziale EAA

curl --location --request POST 'http://localhost:19011/v1/credentials/issue' \
--header 'accept: application/json' \
--header 'Content-Type: application/json' \
--data-raw '{
    "templateId": "EAA",
    "config":
    {
        "subjectDid": "did:key:z6MkuHi68Avi8b36bhsHukLTd3J22QtXQcQf5mXU4znYhcWk",
        "issuerDid": "did:key:z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K"
    },
    "credentialData":
    {
        "credentialSubject":
        {
            "Università": "Università degli studi di Padova",
            "Corso": "Informatica",
            "Esame":"Calcolo Numerico",
            "Data":"29/07/2022",
            "Voto":"27"
        },
        "evidence":{
            "documentPresence": ["Phisical"],
            "evidenceDocument": ["Esame","Corezione","Verbali"],
            "id": "123",
            "subjectPresence": ["Phisical"],
            "type": [],
            "verifier": "did:key:z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K"
        }
    }
}'

Ricevo in risposta il seguente JWT

eyJraWQiOiJkaWQ6a2V5Ono2TWt3M213NzFSMnJFTHNwWk5zaFh1ZUVFemJnZ0o4QWg3dnBaR1NoTGc0azE4SyN6Nk1rdzNtdzcxUjJyRUxzcFpOc2hYdWVFRXpiZ2dKOEFoN3ZwWkdTaExnNGsxOEsiLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJpc3MiOiJkaWQ6a2V5Ono2TWt3M213NzFSMnJFTHNwWk5zaFh1ZUVFemJnZ0o4QWg3dnBaR1NoTGc0azE4SyIsInN1YiI6ImRpZDprZXk6ejZNa3VIaTY4QXZpOGIzNmJoc0h1a0xUZDNKMjJRdFhRY1FmNW1YVTR6blloY1drIiwibmJmIjoxNjg4MTI4ODQ4LCJpYXQiOjE2ODgxMjg4NDgsInZjIjp7InR5cGUiOlsiRUFBIl0sIkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIl0sImlkIjoidXJuOnV1aWQ6YmFiN2JhZjAtMDY5OC00ZDM3LThjMjctNjY5Y2Y5OWJhNmY2IiwiaXNzdWVyIjoiZGlkOmtleTp6Nk1rdzNtdzcxUjJyRUxzcFpOc2hYdWVFRXpiZ2dKOEFoN3ZwWkdTaExnNGsxOEsiLCJpc3N1YW5jZURhdGUiOiIyMDIzLTA2LTMwVDEyOjQwOjQ4WiIsImlzc3VlZCI6IjIwMjMtMDYtMzBUMTI6NDA6NDhaIiwidmFsaWRGcm9tIjoiMjAyMy0wNi0zMFQxMjo0MDo0OFoiLCJleHBpcmF0aW9uRGF0ZSI6IiIsImNyZWRlbnRpYWxTY2hlbWEiOnsiaWQiOiJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vd2FsdC1pZC93YWx0aWQtc3Npa2l0LXZjbGliL21hc3Rlci9zcmMvdGVzdC9yZXNvdXJjZXMvc2NoZW1hcy9WZXJpZmlhYmxlQXR0ZXN0YXRpb24uanNvbiIsInR5cGUiOiJKc29uU2NoZW1hVmFsaWRhdG9yMjAxOCJ9LCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDprZXk6ejZNa3VIaTY4QXZpOGIzNmJoc0h1a0xUZDNKMjJRdFhRY1FmNW1YVTR6blloY1drIiwiVW5pdmVyc2l0w6AiOiJVbml2ZXJzaXTDoCBkZWdsaSBzdHVkaSBkaSBQYWRvdmEiLCJDb3JzbyI6IkluZm9ybWF0aWNhIiwiRXNhbWUiOiJDYWxjb2xvIE51bWVyaWNvIiwiRGF0YSI6IjI5LzA3LzIwMjIiLCJWb3RvIjoiMjcifSwiZXZpZGVuY2UiOnsiZG9jdW1lbnRQcmVzZW5jZSI6WyJQaGlzaWNhbCJdLCJldmlkZW5jZURvY3VtZW50IjpbIkVzYW1lIiwiQ29yZXppb25lIiwiVmVyYmFsaSJdLCJpZCI6IjEyMyIsInN1YmplY3RQcmVzZW5jZSI6WyJQaGlzaWNhbCJdLCJ0eXBlIjpbXSwidmVyaWZpZXIiOiJkaWQ6a2V5Ono2TWt3M213NzFSMnJFTHNwWk5zaFh1ZUVFemJnZ0o4QWg3dnBaR1NoTGc0azE4SyJ9fSwianRpIjoidXJuOnV1aWQ6YmFiN2JhZjAtMDY5OC00ZDM3LThjMjctNjY5Y2Y5OWJhNmY2In0.aMzTnLIRfPAfGNrHXQkG0wCiDwWmuhQXsq-e0rk58Sy3iaFVKDBGtFjGGxjG1TPUirQwGAhIsgrTHSGAfGe9BA


Decodificato in:

HEADER:ALGORITHM & TOKEN TYPE
{
 "kid": "did:key:z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K#z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K",
 "typ": "JWT",
 "alg": "EdDSA"
}
PAYLOAD:DATA
{
 "iss": "did:key:z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K",
 "sub": "did:key:z6MkuHi68Avi8b36bhsHukLTd3J22QtXQcQf5mXU4znYhcWk",
 "nbf": 1688128848,
 "iat": 1688128848,
 "vc": {
   "type": [
     "EAA"
   ],
   "@context": [
     "https://www.w3.org/2018/credentials/v1"
   ],
   "id": "urn:uuid:bab7baf0-0698-4d37-8c27-669cf99ba6f6",
   "issuer": "did:key:z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K",
   "issuanceDate": "2023-06-30T12:40:48Z",
   "issued": "2023-06-30T12:40:48Z",
   "validFrom": "2023-06-30T12:40:48Z",
   "expirationDate": "",
   "credentialSchema": {
     "id": "https://raw.githubusercontent.com/walt-id/waltid-ssikit-vclib/master/src/test/resources/schemas/VerifiableAttestation.json",
     "type": "JsonSchemaValidator2018"
   },
   "credentialSubject": {
     "id": "did:key:z6MkuHi68Avi8b36bhsHukLTd3J22QtXQcQf5mXU4znYhcWk",
     "Università": "Università degli studi di Padova",
     "Corso": "Informatica",
     "Esame": "Calcolo Numerico",
     "Data": "29/07/2022",
     "Voto": "27"
   },
   "evidence": {
     "documentPresence": [
       "Phisical"
     ],
     "evidenceDocument": [
       "Esame",
       "Corezione",
       "Verbali"
     ],
     "id": "123",
     "subjectPresence": [
       "Phisical"
     ],
     "type": [],
     "verifier": "did:key:z6Mkw3mw71R2rELspZNshXueEEzbggJ8Ah7vpZGShLg4k18K"
   }
 },
 "jti": "urn:uuid:bab7baf0-0698-4d37-8c27-669cf99ba6f6"
}
VERIFY SIGNATURE
HMACSHA256(
  base64UrlEncode(header) + "." +
  base64UrlEncode(payload),
  
) secret base64 encoded



Faccio lo store della credenziale nella parte custodian del issuer
curl --location --request PUT 'http://localhost:19021/credentials/urn%3Auuid%3Ad36986f1-3cc0-4156-b5a4-6d3deab84270' \
--header 'accept: application/json' \
--header 'Content-Type: application/json' \
--data-raw 'eyJraWQiOiJkaWQ6a2V5Ono2TWt3M213NzFSMnJFTHNwWk5zaFh1ZUVFemJnZ0o4QWg3dnBaR1NoTGc0azE4SyN6Nk1rdzNtdzcxUjJyRUxzcFpOc2hYdWVFRXpiZ2dKOEFoN3ZwWkdTaExnNGsxOEsiLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJpc3MiOiJkaWQ6a2V5Ono2TWt3M213NzFSMnJFTHNwWk5zaFh1ZUVFemJnZ0o4QWg3dnBaR1NoTGc0azE4SyIsInN1YiI6ImRpZDprZXk6ejZNa3VIaTY4QXZpOGIzNmJoc0h1a0xUZDNKMjJRdFhRY1FmNW1YVTR6blloY1drIiwibmJmIjoxNjg4MTI4ODQ4LCJpYXQiOjE2ODgxMjg4NDgsInZjIjp7InR5cGUiOlsiRUFBIl0sIkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIl0sImlkIjoidXJuOnV1aWQ6YmFiN2JhZjAtMDY5OC00ZDM3LThjMjctNjY5Y2Y5OWJhNmY2IiwiaXNzdWVyIjoiZGlkOmtleTp6Nk1rdzNtdzcxUjJyRUxzcFpOc2hYdWVFRXpiZ2dKOEFoN3ZwWkdTaExnNGsxOEsiLCJpc3N1YW5jZURhdGUiOiIyMDIzLTA2LTMwVDEyOjQwOjQ4WiIsImlzc3VlZCI6IjIwMjMtMDYtMzBUMTI6NDA6NDhaIiwidmFsaWRGcm9tIjoiMjAyMy0wNi0zMFQxMjo0MDo0OFoiLCJleHBpcmF0aW9uRGF0ZSI6IiIsImNyZWRlbnRpYWxTY2hlbWEiOnsiaWQiOiJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vd2FsdC1pZC93YWx0aWQtc3Npa2l0LXZjbGliL21hc3Rlci9zcmMvdGVzdC9yZXNvdXJjZXMvc2NoZW1hcy9WZXJpZmlhYmxlQXR0ZXN0YXRpb24uanNvbiIsInR5cGUiOiJKc29uU2NoZW1hVmFsaWRhdG9yMjAxOCJ9LCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDprZXk6ejZNa3VIaTY4QXZpOGIzNmJoc0h1a0xUZDNKMjJRdFhRY1FmNW1YVTR6blloY1drIiwiVW5pdmVyc2l0w6AiOiJVbml2ZXJzaXTDoCBkZWdsaSBzdHVkaSBkaSBQYWRvdmEiLCJDb3JzbyI6IkluZm9ybWF0aWNhIiwiRXNhbWUiOiJDYWxjb2xvIE51bWVyaWNvIiwiRGF0YSI6IjI5LzA3LzIwMjIiLCJWb3RvIjoiMjcifSwiZXZpZGVuY2UiOnsiZG9jdW1lbnRQcmVzZW5jZSI6WyJQaGlzaWNhbCJdLCJldmlkZW5jZURvY3VtZW50IjpbIkVzYW1lIiwiQ29yZXppb25lIiwiVmVyYmFsaSJdLCJpZCI6IjEyMyIsInN1YmplY3RQcmVzZW5jZSI6WyJQaGlzaWNhbCJdLCJ0eXBlIjpbXSwidmVyaWZpZXIiOiJkaWQ6a2V5Ono2TWt3M213NzFSMnJFTHNwWk5zaFh1ZUVFemJnZ0o4QWg3dnBaR1NoTGc0azE4SyJ9fSwianRpIjoidXJuOnV1aWQ6YmFiN2JhZjAtMDY5OC00ZDM3LThjMjctNjY5Y2Y5OWJhNmY2In0.aMzTnLIRfPAfGNrHXQkG0wCiDwWmuhQXsq-e0rk58Sy3iaFVKDBGtFjGGxjG1TPUirQwGAhIsgrTHSGAfGe9BA'

Nel momento in cui ho creato una credenziale, mi viene ritornata essa in formato JWT, quel testo in formato JWT lo utilizzo per fare lo store della credenziale.
Una volta fatto la mia credenziale è in forma persistente sotto forma di file.
Con nome nomeCredenziale.cred



Comunicazione OpenConnect

Open Connect pare essere uno standard basato o simile a OpenIDvc/vp
Parlando del Issuer per ora abbiamo 3 micro servizi.
- webapp client
- waltIDApi (per generare VC)
- nodo server backend
per prima cosa dobbiamo avere un micro servizio in più legato ad una api del issuer, legato alla sua parte di comunicazione, esso dovrà distaccarsi dal nodo server backend che attualmente abbiamo già in quanto non viene utilizzato per fornire alla api informazioni. ma viene utilizzato per comunicare tra issuer e altri attori.
Esso dovrà avere questa struttura di endpoint:
https://issuer.walt.id/issuer-api/default/oidc/
nella directory :
https://issuer.walt.id/issuer-api/default/oidc/.well-known/openid-configuration
Dovranno trovarsi un json pubblico legato ai VC che l’issuer può rilasciare.

Per iniziare una sessione di scambio di VC bisogna effettuare questa chiamata CLI


ssikit oidc ci auth -i "https://issuer.walt.id/issuer-api/default/oidc" -n "FOO" \
-r "https://blank" \
-c ProofOfResidence

la chiamata dovrà essere opportunamente parametrizzata con dettagli della credenziale che si desidera e legati al wallet su cui memorizzarla.
Ci verrà ridata questa risposta:
[main] INFO id.walt.services.oidc.OIDC4CIService - Sending PAR request to https://issuer.walt.id/issuer-api/default/oidc/par

authorization_details=%5B%7B%22credential_type%22+%3A+%22ProofOfResidence%22%2C+%22format%22+%3A+%22ldp_vc%22%2C+%22locations%22+%3A+null%2C+%22type%22+%3A+%22openid_credential%22%7D%5D&scope=openid&response_type=code&redirect_uri=https%3A%2F%2Fblank&state=KuByb-emBJZTDzquWHDshPZ33lM3HxhUTuCoBTYazy4&nonce=FOO&client_id=https%3A%2F%2Fblank
Point your browser to this address and authorize with the issuer:
https://issuer.walt.id/issuer-api/default/oidc/fulfillPAR?client_id=https://blank&request_uri=urn:ietf:params:oauth:request_uri:a6654355-76db-4183-8f84-4531eee19605
Then paste redirection url from browser to this command to retrieve the access token:
ssikit oidc ci token -i https://issuer.walt.id/issuer-api/default/oidc -r <url from browser>






Comunicazione OPIDC

curl --location --request POST 'localhost:19051/api/oidc/clients/register' \
--header 'Content-Type: application/json' \
--data-raw '{
  "client_name": "MyApp",
  "redirect_uris": [
    "https://myapp.com/redirect_uri"
  ],
  "all_redirect_uris": false
}'


RESPONSE

{
    "client_secret_expires_at": 0,
    "all_redirect_uris": false,
    "registration_client_uri": "http://localhost:19051/api/oidc/clients/Iva8jP9Tmb2Qcw5GhYNjH21BeCaiIQ6OSaSVI2Fjdjg",
    "redirect_uris": [
        "https://myapp.com/redirect_uri"
    ],
    "client_id_issued_at": 1689073851,
    "client_secret": "TzIoSwzf93ajfFJRYJdMBlx1LVpDjiNUkU7VtrS7M2U",
    "client_name": "MyApp",
    "registration_access_token": "eyJraWQiOiI5NjE3MzgxODg5NjU0YWFkOGRiMzM5NThkZTY0NGE0MyIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJJdmE4alA5VG1iMlFjdzVHaFlOakgyMUJlQ2FpSVE2T1NhU1ZJMkZqZGpnIn0.evYoQdPQdkmOVP_dpINB9Kx-g5Yl_VmZkP0WC3W9qllBqaWrZIvb6JgAnBfpXTTOPurfZBGRhyL070L6D_L7aZtlDWlfNzC-oGUHaGJBYa0uVIXjcKcb5fUuXn4_h1NQBkoEuMGhpMSj9My6M-ZHce9Q-PPMOyQNRI7bC9SA7YnxT-X8DGBxr06icXH2X06p0W0fobpWR2bxhinrRlFQ6QTmryqzyUGdkFI47brA_-THA3qw-XrdzwlKM4hx-fFuTsPnSU9_DjdJhvmqAo6m61yj4pWLGngOQrl5pzXeyhNR88AK9Z73sySTX_9qgSVd-WIh9QFsdVo0GWPKbeHIfFHTIGdYCHeVvuqI7K07AhIE3VnnFLc4Pt94CGeHI8i8E-XTCgk85nRwnt41WP7i2s8axizjK9dlzBJF3GUd2Su8KvpHoEFahC4dERuZaHd9Pao2vqn5dZlK-4bu2XqI2wuWgNVVQgizRgZL7e6PpyJ9e8NU7juXNCeItuZIg3v4",
    "client_id": "Iva8jP9Tmb2Qcw5GhYNjH21BeCaiIQ6OSaSVI2Fjdjg"
}


Get CLient with authorization

curl --location --request GET 'localhost:19051/api/oidc/clients/Iva8jP9Tmb2Qcw5GhYNjH21BeCaiIQ6OSaSVI2Fjdjg' \
--header 'Authorization: Bearer eyJraWQiOiI5NjE3MzgxODg5NjU0YWFkOGRiMzM5NThkZTY0NGE0MyIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJJdmE4alA5VG1iMlFjdzVHaFlOakgyMUJlQ2FpSVE2T1NhU1ZJMkZqZGpnIn0.evYoQdPQdkmOVP_dpINB9Kx-g5Yl_VmZkP0WC3W9qllBqaWrZIvb6JgAnBfpXTTOPurfZBGRhyL070L6D_L7aZtlDWlfNzC-oGUHaGJBYa0uVIXjcKcb5fUuXn4_h1NQBkoEuMGhpMSj9My6M-ZHce9Q-PPMOyQNRI7bC9SA7YnxT-X8DGBxr06icXH2X06p0W0fobpWR2bxhinrRlFQ6QTmryqzyUGdkFI47brA_-THA3qw-XrdzwlKM4hx-fFuTsPnSU9_DjdJhvmqAo6m61yj4pWLGngOQrl5pzXeyhNR88AK9Z73sySTX_9qgSVd-WIh9QFsdVo0GWPKbeHIfFHTIGdYCHeVvuqI7K07AhIE3VnnFLc4Pt94CGeHI8i8E-XTCgk85nRwnt41WP7i2s8axizjK9dlzBJF3GUd2Su8KvpHoEFahC4dERuZaHd9Pao2vqn5dZlK-4bu2XqI2wuWgNVVQgizRgZL7e6PpyJ9e8NU7juXNCeItuZIg3v4' \
--header 'Content-Type: application/json' \
--data-raw '{
  "client_name": "MyApp",
  "redirect_uris": [
    "https://myapp.com/redirect_uri"
  ],
  "all_redirect_uris": false
}'


Response

{
    "client_secret_expires_at": 0,
    "all_redirect_uris": false,
    "registration_client_uri": "http://localhost:19051/api/oidc/clients/Iva8jP9Tmb2Qcw5GhYNjH21BeCaiIQ6OSaSVI2Fjdjg",
    "redirect_uris": [
        "https://myapp.com/redirect_uri"
    ],
    "client_id_issued_at": 1689073851,
    "client_secret": "TzIoSwzf93ajfFJRYJdMBlx1LVpDjiNUkU7VtrS7M2U",
    "client_name": "MyApp",
    "registration_access_token": "eyJraWQiOiI5NjE3MzgxODg5NjU0YWFkOGRiMzM5NThkZTY0NGE0MyIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJJdmE4alA5VG1iMlFjdzVHaFlOakgyMUJlQ2FpSVE2T1NhU1ZJMkZqZGpnIn0.evYoQdPQdkmOVP_dpINB9Kx-g5Yl_VmZkP0WC3W9qllBqaWrZIvb6JgAnBfpXTTOPurfZBGRhyL070L6D_L7aZtlDWlfNzC-oGUHaGJBYa0uVIXjcKcb5fUuXn4_h1NQBkoEuMGhpMSj9My6M-ZHce9Q-PPMOyQNRI7bC9SA7YnxT-X8DGBxr06icXH2X06p0W0fobpWR2bxhinrRlFQ6QTmryqzyUGdkFI47brA_-THA3qw-XrdzwlKM4hx-fFuTsPnSU9_DjdJhvmqAo6m61yj4pWLGngOQrl5pzXeyhNR88AK9Z73sySTX_9qgSVd-WIh9QFsdVo0GWPKbeHIfFHTIGdYCHeVvuqI7K07AhIE3VnnFLc4Pt94CGeHI8i8E-XTCgk85nRwnt41WP7i2s8axizjK9dlzBJF3GUd2Su8KvpHoEFahC4dERuZaHd9Pao2vqn5dZlK-4bu2XqI2wuWgNVVQgizRgZL7e6PpyJ9e8NU7juXNCeItuZIg3v4",
    "client_id": "Iva8jP9Tmb2Qcw5GhYNjH21BeCaiIQ6OSaSVI2Fjdjg"
}

http://localhost:19051/api/oidc/.well-known/openid-configuration

Questo link permette di dare le path importanti per realizzare una issuance ed una presentation

{
   "authorization_endpoint":"http://localhost:19051/api/oidc/authorize",
   "token_endpoint":"http://localhost:19051/api/oidc/token",
   "registration_endpoint":"http://localhost:19051/api/oidc/clients/register",
   "pushed_authorization_request_endpoint":"http://localhost:19051/api/oidc/par",
   "issuer":"http://localhost:19051/api/oidc",
   "jwks_uri":"http://localhost:19051/api/oidc/jwkSet",
   "scopes_supported":[
      "openid",
      "profile",
      "address"
   ],
   "response_types_supported":[
      "code",
      "id_token",
      "token",
      "code id_token",
      "code token",
      "id_token token",
      "code id_token token"
   ],
   "grant_types_supported":[
      "authorization_code"
   ],
   "token_endpoint_auth_methods_supported":[
      "client_secret_basic"
   ],
   "request_uri_parameter_supported":true,
   "wallets_supported":[
      {
         "id":"waltid",
         "description":"walt.id web wallet"
      },
      {
         "id":"local",
         "description":"local wallet"
      }
   ],
   "subject_types_supported":[
      "public"
   ],
   "userinfo_endpoint":"http://localhost:19051/api/oidc/userInfo",
   "claims_supported":[
      "vp_token",
      "name",
      "family_name",
      "given_name",
      "gender",
      "birthdate",
      "address"
   ]
}


Questo è una demo di walt id:

https://issuer.walt.id/issuer-api/default/oidc/.well-known/openid-configuration

{
   "authorization_endpoint":"https://issuer.walt.id/issuer-api/default/oidc/fulfillPAR",
   "token_endpoint":"https://issuer.walt.id/issuer-api/default/oidc/token",
   "pushed_authorization_request_endpoint":"https://issuer.walt.id/issuer-api/default/oidc/par",
   "issuer":"https://issuer.walt.id/issuer-api/default",
   "jwks_uri":"https://issuer.walt.id/issuer-api/default/oidc",
   "grant_types_supported":[
      "authorization_code",
      "urn:ietf:params:oauth:grant-type:pre-authorized_code"
   ],
   "request_uri_parameter_supported":true,
   "credentials_supported":{
      "VerifiableId":{
         "display":[
            {
               "name":"VerifiableId"
            }
         ],
         "formats":{
            "ldp_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "Ed25519Signature2018",
                  "Ed25519Signature2020",
                  "EcdsaSecp256k1Signature2019",
                  "RsaSignature2018",
                  "JsonWebSignature2020",
                  "JcsEd25519Signature2020"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "VerifiableId"
               ]
            },
            "jwt_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "ES256",
                  "ES256K",
                  "EdDSA",
                  "RS256",
                  "PS256"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "VerifiableId"
               ]
            }
         }
      },
      "VerifiableDiploma":{
         "display":[
            {
               "name":"VerifiableDiploma"
            }
         ],
         "formats":{
            "ldp_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "Ed25519Signature2018",
                  "Ed25519Signature2020",
                  "EcdsaSecp256k1Signature2019",
                  "RsaSignature2018",
                  "JsonWebSignature2020",
                  "JcsEd25519Signature2020"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "VerifiableDiploma"
               ]
            },
            "jwt_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "ES256",
                  "ES256K",
                  "EdDSA",
                  "RS256",
                  "PS256"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "VerifiableDiploma"
               ]
            }
         }
      },
      "VerifiableVaccinationCertificate":{
         "display":[
            {
               "name":"VerifiableVaccinationCertificate"
            }
         ],
         "formats":{
            "ldp_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "Ed25519Signature2018",
                  "Ed25519Signature2020",
                  "EcdsaSecp256k1Signature2019",
                  "RsaSignature2018",
                  "JsonWebSignature2020",
                  "JcsEd25519Signature2020"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "VerifiableVaccinationCertificate"
               ]
            },
            "jwt_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "ES256",
                  "ES256K",
                  "EdDSA",
                  "RS256",
                  "PS256"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "VerifiableVaccinationCertificate"
               ]
            }
         }
      },
      "ProofOfResidence":{
         "display":[
            {
               "name":"ProofOfResidence"
            }
         ],
         "formats":{
            "ldp_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "Ed25519Signature2018",
                  "Ed25519Signature2020",
                  "EcdsaSecp256k1Signature2019",
                  "RsaSignature2018",
                  "JsonWebSignature2020",
                  "JcsEd25519Signature2020"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "ProofOfResidence"
               ]
            },
            "jwt_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "ES256",
                  "ES256K",
                  "EdDSA",
                  "RS256",
                  "PS256"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "ProofOfResidence"
               ]
            }
         }
      },
      "ParticipantCredential":{
         "display":[
            {
               "name":"ParticipantCredential"
            }
         ],
         "formats":{
            "ldp_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "Ed25519Signature2018",
                  "Ed25519Signature2020",
                  "EcdsaSecp256k1Signature2019",
                  "RsaSignature2018",
                  "JsonWebSignature2020",
                  "JcsEd25519Signature2020"
               ],
               "types":[
                  "VerifiableCredential",
                  "ParticipantCredential"
               ]
            },
            "jwt_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "ES256",
                  "ES256K",
                  "EdDSA",
                  "RS256",
                  "PS256"
               ],
               "types":[
                  "VerifiableCredential",
                  "ParticipantCredential"
               ]
            }
         }
      },
      "Europass":{
         "display":[
            {
               "name":"Europass"
            }
         ],
         "formats":{
            "ldp_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "Ed25519Signature2018",
                  "Ed25519Signature2020",
                  "EcdsaSecp256k1Signature2019",
                  "RsaSignature2018",
                  "JsonWebSignature2020",
                  "JcsEd25519Signature2020"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "Europass"
               ]
            },
            "jwt_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "ES256",
                  "ES256K",
                  "EdDSA",
                  "RS256",
                  "PS256"
               ],
               "types":[
                  "VerifiableCredential",
                  "VerifiableAttestation",
                  "Europass"
               ]
            }
         }
      },
      "OpenBadgeCredential":{
         "display":[
            {
               "name":"OpenBadgeCredential"
            }
         ],
         "formats":{
            "ldp_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "Ed25519Signature2018",
                  "Ed25519Signature2020",
                  "EcdsaSecp256k1Signature2019",
                  "RsaSignature2018",
                  "JsonWebSignature2020",
                  "JcsEd25519Signature2020"
               ],
               "types":[
                  "VerifiableCredential",
                  "OpenBadgeCredential"
               ]
            },
            "jwt_vc":{
               "cryptographic_binding_methods_supported":[
                  "did"
               ],
               "cryptographic_suites_supported":[
                  "ES256",
                  "ES256K",
                  "EdDSA",
                  "RS256",
                  "PS256"
               ],
               "types":[
                  "VerifiableCredential",
                  "OpenBadgeCredential"
               ]
            }
         }
      }
   },
   "credential_issuer":{
      "display":[
         {
            "locale":null,
            "name":"https://issuer.walt.id/issuer-api/default"
         }
      ]
   },
   "credential_endpoint":"https://issuer.walt.id/issuer-api/default/oidc/credential",
   "subject_types_supported":[
      "public"
   ]
}


